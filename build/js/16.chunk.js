(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{349:function(t,e,r){"use strict";r.r(e);var a=r(506),o=r(380);for(var s in o)"default"!==s&&function(t){r.d(e,t,function(){return o[t]})}(s);var i=r(0),c=Object(i.a)(o.default,a.a,a.b,!1,null,null,null);c.options.__file="src/views/articles/frontend/React/WebpackReactThree.vue",e.default=c.exports},380:function(t,e,r){"use strict";r.r(e);var a=r(381),o=r.n(a);for(var s in a)"default"!==s&&function(t){r.d(e,t,function(){return a[t]})}(s);e.default=o.a},381:function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={data:function(){return{toTop:this.$util.toTop}}}},506:function(t,e,r){"use strict";var a=function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("BoWen",[r("div",{staticClass:"p-1",attrs:{slot:"catalog"},slot:"catalog"},[r("Steps",{attrs:{direction:"vertical"}},[r("Step",{attrs:{title:"配置 react-router-dom",content:"配置 react-router-dom",status:"wait"},nativeOn:{click:function(e){t.toTop("#webpack-react-3-1",30)}}}),r("Step",{attrs:{title:"配置 Redux",content:"配置 Redux",status:"wait"},nativeOn:{click:function(e){t.toTop("#webpack-react-3-2",30)}}}),r("Step",{attrs:{title:"配置 其它",content:"配置 其它",status:"wait"},nativeOn:{click:function(e){t.toTop("#webpack-react-3-3",30)}}})],1)],1),r("div",{staticClass:"px-1"},[r("div",{staticClass:"py-3 text-center"},[r("h1",[r("Icon",{attrs:{type:"ios-book-outline"}}),t._v(" 搭建 webpack、react 开发环境（三）")],1),r("p",{staticClass:"pt-1"},[t._v("使用 webpack 4 和 Babel 构建 React 应用开发环境")])]),r("h3",{staticClass:"ml-1",attrs:{id:"webpack-react-3-1"}},[r("Icon",{attrs:{type:"logo-buffer"}}),t._v(" 配置 react-router-dom")],1),r("Divider"),r("p",[t._v("我们开发一个 React 工程肯定不是一两个“页面”就可以满足需求的，所以我们需要一个在多个“页面”中跳转的功能，在使用 React 构建的单页面应用中，要想实现页面间的跳转，首先想到的就是使用路由。")]),r("p",[t._v("考虑 React 工程中的路由时，通常会想到 react-router 和 react-router-dom，其中 React-router 提供了一些 router 的核心 Api，包括  Router, Route, Switch 等，但是它没有提供 Dom 操作进行跳转的 Api，而 React-router-dom 让我们可以通过dom的事件控制路由。")]),r("p",[t._v("由于我们这次只是搭建开发环境，所以就不再做更多的介绍，现在来做一个简单的说明，首先我们需要安装 react-router-dom：")]),r("pre",{directives:[{name:"highlight",rawName:"v-highlight"}],staticClass:"mt-1"},[r("code",{staticClass:"bash"},[t._v("$ yarn add react-router-dom")])]),r("p",[t._v("然后我们简单的使用一下，以验证安装的结果和使用的效果，我们先在跟组件 App 中的同目录下创建两个组件：")]),r("pre",{directives:[{name:"highlight",rawName:"v-highlight"}],staticClass:"mt-1"},[r("code",{staticClass:"js"},[t._v("// Home.js\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default () => (\n<div>\n    <div>home page</div>\n    <Link to=\"/product\">go</Link>\n</div>\n);\n\n// Product.js\nimport React from 'react';\n\nexport default () => (\n<div>product page</div>\n);")])]),r("p",[t._v("然后我们在主组件 App 中引入相关的依赖并进行简单的使用：")]),r("pre",{directives:[{name:"highlight",rawName:"v-highlight"}],staticClass:"mt-1"},[r("code",{staticClass:"js"},[t._v("import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Home from './Home';\nimport Product from './Product';\n\nconst App = () => (\n<BrowserRouter>\n    <div>\n    <Route path=\"/\" exact component={Home} />\n    <Route path=\"/product\" exact component={Product} />\n    </div>\n</BrowserRouter>\n);\n\nexport default App;")])]),r("p",[t._v("现在我们进入项目时会在根目录下，所以会自动进入 Home 页面，当我们点击 go 字段的时候就会跳转到 Product 页面，也就意味着已经安装成功了。")]),r("h3",{staticClass:"ml-1",attrs:{id:"webpack-react-3-2"}},[r("Icon",{attrs:{type:"logo-buffer"}}),t._v(" 配置 Redux")],1),r("Divider"),r("p",[t._v("在 React 中有一个单项数据流的概念，在大型应用中单靠 React 对于数据的管理并不理想，所以我们需要依赖 Redux 来进行管理。")]),r("p",[t._v("Redux 是一个面向 JavaScript 应用的可预测状态容器，它能够让你的页面的数据管理更轻松，现在我们就来对它进行安装并进行简单的使用，首先我们安装 Redux：")]),r("pre",{directives:[{name:"highlight",rawName:"v-highlight"}],staticClass:"mt-1"},[r("code",{staticClass:"bash"},[t._v("$ yarn add redux")])]),r("p",[t._v("然后我们在 src 目录下创建 store 目录，并添加 index.js 和 reducers.js 文件：")]),r("pre",{directives:[{name:"highlight",rawName:"v-highlight"}],staticClass:"mt-1"},[r("code",{staticClass:"js"},[t._v("// index.js\nimport { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n\n// reducers.js\nconst defaultState = {\n    text: 'Hello world',\n};\n\n/* 必须返回一个纯函数 */\nexport default (state = defaultState) => state;")])]),r("p",[t._v("最后我们改变一下 Home 组件以其来测试配置和使用的情况：")]),r("pre",{directives:[{name:"highlight",rawName:"v-highlight"}],staticClass:"mt-1"},[r("code",{staticClass:"js"},[t._v("import React from 'react';\nimport { Link } from 'react-router-dom';\nimport store from './store';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = store.getState();\n        const { text } = this.state;\n        this.text = text;\n    }\n\n    render() {\n        return (\n        <div>\n            <div>{this.text}</div>\n            <Link to=\"/product\">go</Link>\n        </div>\n        );\n    }\n}\n\nexport default Home;")])]),r("p",[t._v("现在页面中的正常情况会显示 store 存储的数据，也就是“Hello world”字样。")]),r("h3",{staticClass:"ml-1",attrs:{id:"webpack-react-3-3"}},[r("Icon",{attrs:{type:"logo-buffer"}}),t._v(" 配置 其它")],1),r("Divider"),r("p",[t._v("接下来会对配置的对象列出一个列表来，就不再像之前这样在页面中同时列出做出的修改，如果有兴趣的同学，可以直接点击 "),r("a",{attrs:{href:"https://github.com/Anani1994/webpack-react"}},[t._v("show me the code")]),r("font",[t._v(" 直接查看源码，也可以查看提交历史中对应 commit 中的内容。")])],1),r("p",[t._v("毕竟主要是配置，使用方法三两句就说不清楚了，所以暂且这样：")]),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/axios/axios"}},[t._v("Axios")])]),r("li",[r("a",{attrs:{href:"https://github.com/facebook/prop-types"}},[t._v("PropTypes")])]),r("li",[r("a",{attrs:{href:"https://github.com/yahoo/react-intl"}},[t._v("ReactIntl")])])]),r("p",[t._v("最后，如果在开发中有使用到 Git 的话，那么结合 "),r("a",{attrs:{href:"https://github.com/typicode/husky"}},[t._v("husky")]),r("font",[t._v(" 和 ")]),r("a",{attrs:{href:"https://github.com/observing/pre-commit"}},[t._v("lint-staged")]),r("font",[t._v(" 配置代码检查工作流将会非常的棒，在我们配置完成之后，每当我们提交时，都会执行代码检查工作，如果代码的书写不规范的话将会取消本次提交。")])],1),r("p",[t._v("当然这两者的功能并不仅仅如此，感兴趣的朋友可以点击上面的链接了解更多，这里我们先来简单的配置体验一下它的功能，首先还是安装依赖：")]),r("pre",{directives:[{name:"highlight",rawName:"v-highlight"}],staticClass:"mt-1"},[r("code",{staticClass:"bash"},[t._v("$ yarn add husky lint-staged --dev")])]),r("p",[t._v("然后我们在 package.json 文件中对它们进行配置：")]),r("pre",{directives:[{name:"highlight",rawName:"v-highlight"}],staticClass:"mt-1"},[r("code",{staticClass:"json"},[t._v('{\n    "scripts": {\n        "precommit": "lint-staged"\n    },\n    "lint-staged": {\n        "src/**/*.js": "eslint"\n    }\n}')])]),r("p",[t._v("现在我们每次提价前就会执行代码检测啦，你可以特意书写一行不符合规范的代码来来进行测试。")]),r("p",[t._v("环境的配置到这里就告一段落啦，这里更多的是介绍了 React 相关插件和库的安装，如果你想要知道最初的搭建步骤，你可以点击 "),r("a",{attrs:{href:"#/articles/frontend/React/webpack-react"}},[t._v("搭建 webpack、react 开发环境（一）")]),r("font",[t._v(" 来继续查看。如果你需要查看 webpack 方面的一些配置和插件的使用，以及一些可以优化的地方可以点击 ")]),r("a",{attrs:{href:"#/articles/frontend/React/webpack-react-two"}},[t._v("搭建 webpack、react 开发环境（二）")]),r("font",[t._v(" 来继续查看。")])],1),r("p",{staticClass:"text-right"},[t._v("参考资料："),r("a",{attrs:{href:"https://www.webpackjs.com/"}},[t._v("Webpack 中文文档")]),r("span",{staticClass:"border-right border-dark mx-1"}),r("a",{attrs:{href:"https://meyerweb.com/eric/tools/css/reset/"}},[t._v("Reset CSS")]),r("span",{staticClass:"border-right border-dark mx-1"}),r("a",{attrs:{href:"https://www.robinwieruch.de/react-eslint-webpack-babel/"}},[t._v("React Code Style with ESLint + Babel + Webpack")])]),r("FooterDivider")],1)])},o=[];a._withStripped=!0,r.d(e,"a",function(){return a}),r.d(e,"b",function(){return o})}}]);